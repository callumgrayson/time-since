{"version":3,"sources":["components/Main.js","components/ViewOptions.js","components/BackButton.js","components/InputDateTime.js","components/DatesBaseTen.js","components/SVGexperiment1.js","components/SVGexperiment2.js","components/SVGexperiment3.js","components/SVGExperiments.js","components/TimesFromDate.js","components/StopwatchDisplay3.js","components/ViewController.js","App.js","reportWebVitals.js","index.js"],"names":["Main","children","style","padding","ViewOptions","options","map","item","type","onClick","handler","id","BackButton","position","top","left","width","height","display","justifyContent","alignItems","InputDateTime","value","changeHandler","onChange","base10sMap","unit","zoeBirthDateTime","zoeBirthObject","Date","initialDate","DatesBaseTen","useState","dateTime","setDateTime","displayDates","inDateString","momentBirth","moment","baseObj","momentBase","add","valueUnix","unix","format","short","future","now","age","from","sort","a","b","getDisplayDates","valueOf","toDateString","toLocaleString","inVal","val","target","color","useStyles","makeStyles","viewBox","border","SVGexperiment1","classes","points","createPoints","className","stroke","fill","strokeWidth","d","yEq","x","pairsArray","i","parts","y","push","join","sliderBox","rangeBox","flexDirection","topInput","rangeInput","flex","minWidth","setTop","rangeValue","setRangeValue","aValue","name","min","max","e","step","Math","exp","SVGExperiments","SVGexperiment3","SVGexperiment2","unixBirth","birthMap","zoe","callum","lucile","TimesFromDate","resetHandler","differenceMs","differencesArray","diff","obj","textAlign","fontFamily","str","undefined","minimumFractionDigits","maximumFractionDigits","numberStyle","callumBirthDateTime","lucileBirthDateTime","birthMomentMap","personMap","optionsMap","StopwatchDisplay3","person","setPerson","dateFrom","setDateFrom","siRef","useRef","splitRef","secondsRef","minutesRef","hoursRef","daysRef","weeksRef","monthsRef","yearsRef","handleDateChange","useEffect","current","setInterval","valuesObj","nowMoment","diffYears","laterYears","diffMonths","laterMonths","diffWeeks","laterWeeks","diffDays","laterDays","diffHours","laterHours","diffMinutes","laterMinutes","diffSeconds","diffAsSeconds","diffAsMinutes","diffAsHours","diffAsDays","diffAsWeeks","diffAsMonths","diffAsYears","split","seconds","minutes","hours","days","weeks","months","years","stopwatchCallback","innerText","clearInterval","Boolean","ref","ViewController","viewId","setViewId","DisplayPage","handleViewOption","optionsArray","Object","keys","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.95e1ea26.chunk.js","sourcesContent":["import React from \"react\"\n\nconst Main = ({ children }) => {\n  return <div style={{ padding: \"10px 40px\" }}>{children}</div>\n}\n\nexport default Main\n","import React from \"react\"\nimport Main from \"./Main\"\n\nconst ViewOptions = ({ options = [] }) => {\n  return (\n    <Main>\n      {options.map((item) => (\n        <button\n          key={item.id}\n          type=\"button\"\n          onClick={item.handler}\n          style={{ padding: \"10px\" }}\n        >\n          {item.id}\n        </button>\n      ))}\n    </Main>\n  )\n}\n\nexport default ViewOptions\n","import React from \"react\"\n\nconst BackButton = ({ handler }) => {\n  return (\n    <div\n      style={{\n        position: \"absolute\",\n        top: \"0px\",\n        left: \"0px\",\n        width: \"30px\",\n        height: \"30px\",\n        display: \"flex\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n      }}\n    >\n      <button onClick={handler}>{`<`}</button>\n    </div>\n  )\n}\n\nexport default BackButton\n","import React from \"react\"\n\nconst InputDateTime = ({ value, changeHandler }) => {\n  return (\n    <div>\n      <div>InputDateTime</div>\n      <input type=\"datetime-local\" value={value} onChange={changeHandler} />\n    </div>\n  )\n}\n\nexport default InputDateTime\n","import React, { useState } from \"react\"\nimport Main from \"./Main\"\nimport moment from \"moment-timezone\"\nimport InputDateTime from \"./InputDateTime\"\n\nconst base10sMap = [\n  { unit: \"seconds\", value: 10000 },\n  { unit: \"seconds\", value: 100000 },\n  { unit: \"seconds\", value: 1000000 },\n  { unit: \"seconds\", value: 10000000 },\n  { unit: \"seconds\", value: 100000000 },\n  { unit: \"seconds\", value: 1000000000 },\n\n  { unit: \"minutes\", value: 1000 },\n  { unit: \"minutes\", value: 10000 },\n  { unit: \"minutes\", value: 100000 },\n  { unit: \"minutes\", value: 1000000 },\n  { unit: \"minutes\", value: 10000000 },\n\n  { unit: \"hours\", value: 100 },\n  { unit: \"hours\", value: 1000 },\n  { unit: \"hours\", value: 10000 },\n  { unit: \"hours\", value: 100000 },\n  { unit: \"hours\", value: 1000000 },\n\n  { unit: \"days\", value: 1 },\n  { unit: \"days\", value: 10 },\n  { unit: \"days\", value: 100 },\n  { unit: \"days\", value: 1000 },\n  { unit: \"days\", value: 10000 },\n\n  { unit: \"weeks\", value: 1 },\n  { unit: \"weeks\", value: 10 },\n  { unit: \"weeks\", value: 100 },\n  { unit: \"weeks\", value: 1000 },\n\n  { unit: \"months\", value: 1 },\n  { unit: \"months\", value: 10 },\n  { unit: \"months\", value: 100 },\n  { unit: \"months\", value: 1000 },\n]\n\n// const zoeBirthDateTime = \"2021-02-12 05:47+01:00\"\nconst zoeBirthDateTime = \"2021-02-12T05:47\"\nconst zoeBirthObject = new Date(zoeBirthDateTime)\nconst formatFull = \"dddd, MMMM Do YYYY, h:mm:ss a\"\nconst formatShort = \"YYYY MMM DD\"\n\nconst getDisplayDates = (inDateString) => {\n  const momentBirth = moment(inDateString)\n  const baseArray = base10sMap.map((baseObj) => {\n    const momentBase = moment(inDateString).add(baseObj.value, baseObj.unit)\n\n    return {\n      ...baseObj,\n      valueUnix: momentBase.unix(),\n      display: momentBase.format(formatFull),\n      short: momentBase.format(formatShort),\n      future: momentBase.unix() * 1000 - Date.now() > 0,\n      age: momentBase.from(momentBirth, true),\n    }\n  })\n\n  const sortedDates = baseArray.sort((a, b) => a.valueUnix - b.valueUnix)\n\n  return sortedDates\n}\n\n// const initialDate = new Date().toISOString().split(\":\").slice(0, 2).join(\":\")\nconst initialDate = zoeBirthDateTime\n// console.log(\"initialDate\", initialDate)\n\nconst DatesBaseTen = () => {\n  const [dateTime, setDateTime] = useState(initialDate)\n\n  const handleDateTimeChange = (inVal) => {\n    const val = inVal.target.value\n    // console.log(\"val\", val)\n    setDateTime(val)\n  }\n  const resetHandler = () => {\n    setDateTime(initialDate)\n  }\n\n  const displayDates = getDisplayDates(dateTime)\n\n  return (\n    <Main>\n      <h1>Dates base ten</h1>\n      <div>Zoe's birthdate is:</div>\n      <div>{zoeBirthObject.valueOf()}</div>\n      <div>{zoeBirthObject.toDateString()}</div>\n      <div>{zoeBirthObject.toLocaleString()}</div>\n      <br />\n      <InputDateTime value={dateTime} changeHandler={handleDateTimeChange} />\n      <button type=\"button\" onClick={resetHandler}>\n        Reset\n      </button>\n      <br />\n      <div>\n        <table>\n          <thead>\n            <tr>\n              <th>Date</th>\n              <th>Versary Type</th>\n              <th>Date and Time</th>\n              <th>Age</th>\n            </tr>\n          </thead>\n          <tbody>\n            {displayDates.map((baseObj) => (\n              <tr\n                key={`${baseObj.value}${baseObj.unit}`}\n                style={{ color: `${baseObj.future ? \"black\" : \"lightgray\"}` }}\n              >\n                <td>{baseObj.short}</td>\n                <td>\n                  {baseObj.value.toLocaleString()} {baseObj.unit}\n                </td>\n                <td>{baseObj.display}</td>\n                <td>{baseObj.age}</td>\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      </div>\n    </Main>\n  )\n}\n\nexport default DatesBaseTen\n","import React from \"react\"\nimport Main from \"./Main\"\nimport { makeStyles } from \"@material-ui/core/styles\"\n\nconst useStyles = makeStyles({\n  viewBox: {\n    border: \"1px solid green\",\n  },\n})\n\nconst SVGexperiment1 = () => {\n  const classes = useStyles()\n\n  const points = createPoints()\n\n  return (\n    <Main>\n      <div>SVG Experiments 1</div>\n      <div>\n        <svg viewBox=\"0 0 100 100\" className={classes.viewBox}>\n          <g stroke=\"black\" fill=\"none\" strokeWidth=\"0.4px\">\n            <path d={points} />\n          </g>\n        </svg>\n      </div>\n    </Main>\n  )\n}\n\nexport default SVGexperiment1\n\nconst createPoints = () => {\n  const width = 100\n  const height = 100\n  const parts = 100\n  const partX = width / parts\n  const percent100 = height\n\n  const n = 100\n  const a = 103\n  const b = ((a - percent100) / percent100) * n\n  const yEq = (x) => (a * x) / (x + b)\n\n  let pairsArray = []\n\n  for (let i = 0; i < parts + 1; i++) {\n    let x = i * partX\n    let ybasic = yEq(x)\n    let yScaled = (ybasic * n) / height\n\n    let y = height - yScaled\n\n    if (i === 0) {\n      pairsArray.push(`M${x},${y}`)\n    } else {\n      pairsArray.push(`L${x},${y}`)\n    }\n  }\n  return pairsArray.join(\" \")\n}\n","import React, { useState } from \"react\"\nimport Main from \"./Main\"\nimport { makeStyles } from \"@material-ui/core/styles\"\n\nconst useStyles = makeStyles({\n  viewBox: {\n    border: \"1px solid black\",\n  },\n  sliderBox: {\n    display: \"flex\",\n    width: \"100%\",\n    // border: \"1px solid gold\",\n  },\n  rangeBox: {\n    display: \"flex\",\n    alignItems: \"center\",\n    flexDirection: \"column\",\n    width: \"100%\",\n  },\n  topInput: {\n    width: \"40px\",\n  },\n  rangeInput: {\n    flex: 1,\n    minWidth: \"300px\",\n  },\n})\n\nconst SVGexperiment1 = () => {\n  const [top, setTop] = useState(200)\n  const [rangeValue, setRangeValue] = useState(113)\n  const handleTopChange = (e) => {\n    const { value } = e.target\n    setTop(value)\n  }\n  const handleRangeChange = (e) => {\n    const { value } = e.target\n    setRangeValue(value)\n  }\n  const classes = useStyles()\n\n  const points = createPoints({ aValue: rangeValue })\n\n  return (\n    <Main>\n      <div>SVG Experiments 2</div>\n      <div className={classes.rangeBox}>\n        <div>{rangeValue}</div>\n        <div className={classes.sliderBox}>\n          <div>100</div>\n          <input\n            type=\"range\"\n            name=\"aRange\"\n            id=\"aRange\"\n            min=\"100.1\"\n            max={`${top}`}\n            value={rangeValue}\n            onChange={handleRangeChange}\n            step=\"0.1\"\n            className={classes.rangeInput}\n          />\n          <div>\n            <input\n              type=\"number\"\n              name=\"topRange\"\n              id=\"topRange\"\n              onChange={handleTopChange}\n              value={top}\n              className={classes.topInput}\n            />\n          </div>\n        </div>\n      </div>\n      <div>\n        <svg viewBox=\"0 0 100 100\" className={classes.viewBox}>\n          <g stroke=\"#dfdfdf\" fill=\"none\" strokeWidth=\"0.1px\">\n            <path\n              d={\n                \"M10,0 L10,100 M20,0 L20,100 M30,0 L30,100 M40,0 L40,100 M50,0 L50,100 M60,0 L60,100 M70,0 L70,100 M80,0 L80,100 M90,0 L90,100\"\n              }\n            />\n            <path\n              d={\n                \"M0,10 L100,10 M0,20 L100,20 M0,30 L100,30 M0,40 L100,40 M0,50 L100,50 M0,60 L100,60 M0,70 L100,70 M0,80 L100,80 M0,90 L100,90\"\n              }\n            />\n          </g>\n          <g stroke=\"black\" fill=\"none\" strokeWidth=\"0.4px\">\n            <path d={points} />\n          </g>\n        </svg>\n      </div>\n    </Main>\n  )\n}\n\nexport default SVGexperiment1\n\nconst createPoints = ({ aValue }) => {\n  const width = 100\n  const height = 100\n  const parts = 400\n  const partX = width / parts\n  const percent100 = height\n\n  const n = 100\n  const a = aValue\n  const b = ((a - percent100) / percent100) * n\n  const yEq = (x) => (a * x) / (x + b)\n\n  let pairsArray = []\n\n  for (let i = 0; i < parts + 1; i++) {\n    let x = i * partX\n    let ybasic = yEq(x)\n    let yScaled = (ybasic * n) / height\n\n    let y = height - yScaled\n\n    if (i === 0) {\n      pairsArray.push(`M${x},${y}`)\n    } else {\n      pairsArray.push(`L${x},${y}`)\n    }\n  }\n  return pairsArray.join(\" \")\n}\n","import React, { useState } from \"react\"\nimport Main from \"./Main\"\nimport { makeStyles } from \"@material-ui/core/styles\"\n\nconst useStyles = makeStyles({\n  viewBox: {\n    border: \"1px solid black\",\n  },\n  sliderBox: {\n    display: \"flex\",\n    width: \"100%\",\n    // border: \"1px solid gold\",\n  },\n  rangeBox: {\n    display: \"flex\",\n    alignItems: \"center\",\n    flexDirection: \"column\",\n    width: \"100%\",\n  },\n  topInput: {\n    width: \"40px\",\n  },\n  rangeInput: {\n    flex: 1,\n    minWidth: \"300px\",\n  },\n})\n\nconst SVGexperiment1 = () => {\n  // const [, setTop] = useState(100)\n  const [rangeValue, setRangeValue] = useState(50)\n  // const handleTopChange = (e) => {\n  //   const { value } = e.target\n  //   setTop(value)\n  // }\n  const handleRangeChange = (e) => {\n    const { value } = e.target\n    setRangeValue(value)\n  }\n  const classes = useStyles()\n\n  const points = createPoints({\n    aValue: 100 + Math.exp((72 - rangeValue) * 0.09),\n  })\n\n  return (\n    <Main>\n      <div>\n        SVG Experiments 3 aValue: 100 + Math.exp((72 - rangeValue) * 0.09)\n      </div>\n      <div className={classes.rangeBox}>\n        <div>{rangeValue}</div>\n        <div className={classes.sliderBox}>\n          <div>0</div>\n          <input\n            type=\"range\"\n            name=\"aRange\"\n            id=\"aRange\"\n            min=\"0\"\n            max={\"100\"}\n            value={rangeValue}\n            onChange={handleRangeChange}\n            step=\"0.1\"\n            className={classes.rangeInput}\n          />\n          <div>\n            100\n            {/* <input\n              type=\"number\"\n              name=\"topRange\"\n              id=\"topRange\"\n              onChange={handleTopChange}\n              value={top}\n              className={classes.topInput}\n            /> */}\n          </div>\n        </div>\n      </div>\n      <div>\n        <svg viewBox=\"0 0 100 100\" className={classes.viewBox}>\n          <g stroke=\"#dfdfdf\" fill=\"none\" strokeWidth=\"0.1px\">\n            <path\n              d={\n                \"M10,0 L10,100 M20,0 L20,100 M30,0 L30,100 M40,0 L40,100 M50,0 L50,100 M60,0 L60,100 M70,0 L70,100 M80,0 L80,100 M90,0 L90,100\"\n              }\n            />\n            <path\n              d={\n                \"M0,10 L100,10 M0,20 L100,20 M0,30 L100,30 M0,40 L100,40 M0,50 L100,50 M0,60 L100,60 M0,70 L100,70 M0,80 L100,80 M0,90 L100,90\"\n              }\n            />\n          </g>\n          <g stroke=\"black\" fill=\"none\" strokeWidth=\"0.4px\">\n            <path d={points} />\n          </g>\n        </svg>\n      </div>\n    </Main>\n  )\n}\n\nexport default SVGexperiment1\n\nconst createPoints = ({ aValue }) => {\n  const width = 100\n  const height = 100\n  const parts = 400\n  const partX = width / parts\n  const percent100 = height\n\n  const n = 100\n  const a = aValue\n  const b = ((a - percent100) / percent100) * n\n  const yEq = (x) => (a * x) / (x + b)\n\n  let pairsArray = []\n\n  for (let i = 0; i < parts + 1; i++) {\n    let x = i * partX\n    let ybasic = yEq(x)\n    let yScaled = (ybasic * n) / height\n\n    let y = height - yScaled\n\n    if (i === 0) {\n      pairsArray.push(`M${x},${y}`)\n    } else {\n      pairsArray.push(`L${x},${y}`)\n    }\n  }\n  return pairsArray.join(\" \")\n}\n","import React from \"react\"\nimport Main from \"./Main\"\nimport SVGexperiment1 from \"./SVGexperiment1\"\nimport SVGexperiment2 from \"./SVGexperiment2\"\nimport SVGexperiment3 from \"./SVGexperiment3\"\n\nconst SVGExperiments = () => {\n  return (\n    <Main>\n      <SVGexperiment3 />\n      <SVGexperiment2 />\n      <SVGexperiment1 />\n    </Main>\n  )\n}\n\nexport default SVGExperiments\n","import React, { useState } from \"react\"\nimport Main from \"./Main\"\nimport moment from \"moment-timezone\"\nimport InputDateTime from \"./InputDateTime\"\n\nconst formatFull = \"dddd, MMMM Do YYYY, h:mm:ss a\"\n// const formatShort = \"YYYY MMM DD\"\n\nconst zoeBirthDateTime = \"2021-02-12T05:47\"\nconst callumBirthDateTime = \"1981-08-09T04:00\"\nconst lucileBirthDateTime = \"1987-03-11T05:00\"\nconst zoeBirthObject = new Date(zoeBirthDateTime)\nconst unixBirth = zoeBirthObject.valueOf()\nconst initialDate = zoeBirthDateTime\n\nconst birthMap = {\n  zoe: zoeBirthDateTime,\n  callum: callumBirthDateTime,\n  lucile: lucileBirthDateTime,\n}\n\nconst TimesFromDate = () => {\n  const [dateTime, setDateTime] = useState(initialDate)\n\n  const handleDateTimeChange = (inVal) => {\n    const val = inVal.target.value\n    // console.log(\"val\", val)\n    setDateTime(val)\n  }\n  const resetHandler = (e) => {\n    const { value } = e.target\n    const newDate = birthMap[value]\n    setDateTime(newDate)\n  }\n\n  const zoeBirthObject = new Date(dateTime)\n  const momentBirth = moment(zoeBirthObject)\n  const now = Date.now()\n  const unixDate = zoeBirthObject.valueOf()\n  const differenceMs = now - unixDate\n  const differenceS = differenceMs / 1000\n  const differenceMins = differenceMs / 1000 / 60\n  const differenceSHours = differenceMs / 1000 / 60 / 60\n  const differenceSDays = differenceMs / 1000 / 60 / 60 / 24\n  const differenceSWeeks = differenceMs / 1000 / 60 / 60 / 24 / 7\n  const diffMonths = moment().diff(momentBirth, \"months\", true)\n  const diffYears = moment().diff(momentBirth, \"years\", true)\n\n  const differencesArray = [\n    { unit: \"Milliseconds\", value: differenceMs },\n    { unit: \"Seconds\", value: differenceS },\n    { unit: \"Minutes\", value: differenceMins },\n    { unit: \"Hours\", value: differenceSHours },\n    { unit: \"Days\", value: differenceSDays },\n    { unit: \"Weeks\", value: differenceSWeeks },\n    { unit: \"Months\", value: diffMonths },\n    { unit: \"Years\", value: diffYears },\n  ]\n\n  const formatTimes = (str) =>\n    str.toLocaleString(undefined, {\n      minimumFractionDigits: 2,\n      maximumFractionDigits: 2,\n    })\n\n  return (\n    <Main>\n      Times From Date\n      <InputDateTime value={dateTime} changeHandler={handleDateTimeChange} />\n      <button type=\"button\" onClick={resetHandler} value=\"zoe\">\n        Zoé\n      </button>\n      <button type=\"button\" onClick={resetHandler} value=\"callum\">\n        Callum\n      </button>\n      <button type=\"button\" onClick={resetHandler} value=\"lucile\">\n        Lucile\n      </button>\n      <div>{momentBirth.format(formatFull)}</div>\n      <div>{unixBirth}</div>\n      <div>{now}</div>\n      <table>\n        <thead>\n          <tr>\n            <th>Unit</th>\n            <th>Number</th>\n          </tr>\n        </thead>\n        <tbody>\n          {differencesArray.map((obj) => (\n            <tr>\n              <td>{obj.unit}</td>\n              <td style={{ textAlign: \"right\" }}>\n                <div style={{ fontFamily: \"Courier\" }}>\n                  {formatTimes(obj.value)}\n                </div>\n              </td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    </Main>\n  )\n}\n\nexport default TimesFromDate\n","import React, { useState, useEffect, useRef } from \"react\"\nimport Main from \"./Main\"\nimport Stopwatch from \"./Stopwatch\"\nimport moment from \"moment-timezone\"\n\nconst numberStyle = {\n  textAlign: \"right\",\n  width: \"200px\",\n  fontFamily: \"courier\",\n}\n\nconst zoeBirthDateTime = \"2021-02-12T05:47+01:00\"\nconst callumBirthDateTime = \"1981-08-09T04:00+12:00\"\nconst lucileBirthDateTime = \"1987-03-11T05:00+01:00\"\n\nconst birthMap = {\n  zoe: zoeBirthDateTime,\n  callum: callumBirthDateTime,\n  lucile: lucileBirthDateTime,\n}\n\nconst birthMomentMap = {\n  zoe: moment(zoeBirthDateTime),\n  callum: moment(callumBirthDateTime),\n  lucile: moment(lucileBirthDateTime),\n}\n\nconst personMap = {\n  zoe: \"Zoe\",\n  callum: \"Callum\",\n  lucile: \"Lucile\",\n}\n\nconst delay = 100\n\nconst stopwatchCallback = ({ now, dateFrom }) => {\n  const nowMoment = moment(now)\n\n  const diffYears = nowMoment.diff(dateFrom, \"years\")\n  const laterYears = moment(dateFrom).add(diffYears, \"years\")\n\n  const diffMonths = nowMoment.diff(laterYears, \"months\")\n  const laterMonths = moment(laterYears).add(diffMonths, \"months\")\n\n  const diffWeeks = nowMoment.diff(laterMonths, \"weeks\")\n  const laterWeeks = moment(laterMonths).add(diffWeeks, \"weeks\")\n\n  const diffDays = nowMoment.diff(laterWeeks, \"days\")\n  const laterDays = moment(laterWeeks).add(diffDays, \"days\")\n\n  const diffHours = nowMoment.diff(laterDays, \"hours\")\n  const laterHours = moment(laterDays).add(diffHours, \"hours\")\n\n  const diffMinutes = nowMoment.diff(laterHours, \"minutes\")\n  const laterMinutes = moment(laterHours).add(diffMinutes, \"minutes\")\n\n  const diffSeconds = nowMoment.diff(laterMinutes, \"seconds\")\n\n  const diffAsSeconds = nowMoment.diff(dateFrom, \"seconds\")\n  const diffAsMinutes = nowMoment.diff(dateFrom, \"minutes\", true)\n  const diffAsHours = nowMoment.diff(dateFrom, \"hours\", true)\n  const diffAsDays = nowMoment.diff(dateFrom, \"days\", true)\n  const diffAsWeeks = nowMoment.diff(dateFrom, \"weeks\", true)\n  const diffAsMonths = nowMoment.diff(dateFrom, \"months\", true)\n  const diffAsYears = nowMoment.diff(dateFrom, \"years\", true)\n\n  return {\n    split: `${diffYears} years, ${diffMonths} months, ${diffWeeks} weeks, ${diffDays} days, ${diffHours} hours, ${diffMinutes} minutes, ${diffSeconds} seconds`,\n    seconds: diffAsSeconds.toLocaleString(),\n    minutes: diffAsMinutes.toLocaleString(undefined, {\n      minimumFractionDigits: 2,\n      maximumFractionDigits: 2,\n    }),\n    hours: diffAsHours.toLocaleString(undefined, {\n      minimumFractionDigits: 4,\n      maximumFractionDigits: 4,\n    }),\n    days: diffAsDays.toLocaleString(undefined, {\n      minimumFractionDigits: 5,\n      maximumFractionDigits: 5,\n    }),\n    weeks: diffAsWeeks.toLocaleString(undefined, {\n      minimumFractionDigits: 6,\n      maximumFractionDigits: 6,\n    }),\n    months: diffAsMonths.toLocaleString(undefined, {\n      minimumFractionDigits: 7,\n      maximumFractionDigits: 7,\n    }),\n    years: diffAsYears.toLocaleString(undefined, {\n      minimumFractionDigits: 8,\n      maximumFractionDigits: 8,\n    }),\n  }\n}\n\nconst StopwatchDisplay = () => {\n  const [person, setPerson] = useState(\"\")\n  const [dateFrom, setDateFrom] = useState(null)\n\n  // const timeDisplay = useRef(null)\n  const siRef = useRef(null) // Holds setInterval ref\n  const splitRef = useRef(null)\n  const secondsRef = useRef(null)\n  const minutesRef = useRef(null)\n  const hoursRef = useRef(null)\n  const daysRef = useRef(null)\n  const weeksRef = useRef(null)\n  const monthsRef = useRef(null)\n  const yearsRef = useRef(null)\n\n  const handleDateChange = (name) => {\n    setPerson(personMap[name])\n    setDateFrom(birthMomentMap[name])\n  }\n\n  useEffect(() => {\n    if (!dateFrom) return\n\n    function step() {\n      const valuesObj = stopwatchCallback({ now: Date.now(), dateFrom })\n      splitRef.current.innerText = valuesObj.split\n      secondsRef.current.innerText = valuesObj.seconds\n      minutesRef.current.innerText = valuesObj.minutes\n      hoursRef.current.innerText = valuesObj.hours\n      daysRef.current.innerText = valuesObj.days\n      weeksRef.current.innerText = valuesObj.weeks\n      monthsRef.current.innerText = valuesObj.months\n      yearsRef.current.innerText = valuesObj.years\n    }\n\n    siRef.current = setInterval(step, delay)\n\n    return () => {\n      clearInterval(siRef.current)\n    }\n  }, [dateFrom])\n\n  // console.log(\"render\", dateFrom)\n\n  return (\n    <Main>\n      StopwatchDisplay3\n      <div>Time</div>\n      <div>\n        <button\n          type=\"button\"\n          onClick={() => {\n            handleDateChange(\"lucile\")\n          }}\n        >\n          Lulu\n        </button>\n        <button\n          type=\"button\"\n          onClick={() => {\n            handleDateChange(\"zoe\")\n          }}\n        >\n          Zoe\n        </button>\n        <button\n          type=\"button\"\n          onClick={() => {\n            handleDateChange(\"callum\")\n          }}\n        >\n          Callum\n        </button>\n      </div>\n      <div>\n        <div>Time for {person}</div>\n        <div>Time Unix {Boolean(dateFrom) ? dateFrom.format() : \"\"}</div>\n        <br />\n\n        <div>\n          <div ref={splitRef}></div>\n          <br />\n          <div>\n            <table>\n              <tbody>\n                <tr>\n                  <td>\n                    <div ref={yearsRef} style={numberStyle}></div>\n                  </td>\n                  <td>Years</td>\n                </tr>\n                <tr>\n                  <td>\n                    <div ref={monthsRef} style={numberStyle}></div>\n                  </td>\n                  <td>Months</td>\n                </tr>\n                <tr>\n                  <td>\n                    <div ref={weeksRef} style={numberStyle}></div>\n                  </td>\n                  <td>Weeks</td>\n                </tr>\n                <tr>\n                  <td>\n                    <div ref={daysRef} style={numberStyle}></div>\n                  </td>\n                  <td>Days</td>\n                </tr>\n                <tr>\n                  <td>\n                    <div ref={hoursRef} style={numberStyle}></div>\n                  </td>\n                  <td>Hours</td>\n                </tr>\n                <tr>\n                  <td>\n                    <div ref={minutesRef} style={numberStyle}></div>\n                  </td>\n                  <td>Minutes</td>\n                </tr>\n                <tr>\n                  <td>\n                    <div ref={secondsRef} style={numberStyle}></div>\n                  </td>\n                  <td>Seconds</td>\n                </tr>\n              </tbody>\n            </table>\n          </div>\n        </div>\n      </div>\n    </Main>\n  )\n}\n\nexport default StopwatchDisplay\n\nconst useCountup = ({ callback }) => {}\n","import React, { useState } from \"react\"\nimport ViewOptions from \"./ViewOptions\"\nimport BackButton from \"./BackButton\"\nimport DatesBaseTen from \"./DatesBaseTen\"\nimport SVGExperiments from \"./SVGExperiments\"\nimport TimesFromDate from \"./TimesFromDate\"\nimport StopwatchDisplay3 from \"./StopwatchDisplay3\"\n\nconst optionsMap = {\n  // ReactSelect,\n  DatesBaseTen,\n  // Ideas,\n  // CronJobs,\n  // ALMobilePreview,\n  // ALSpeechBubble,\n  // ALCategoriesSelect,\n  // ALNestedSelects,\n  SVGExperiments,\n  // ALSwitch,\n  // ALSliderDisplay,\n  // ALTemplateCardDisplay,\n  // ReactForceUpdate1,\n  TimesFromDate,\n  // ALActivityCardDisplay,\n  // ALPictureAnnotateDisplay,\n  // Stopwatch1,\n  // Stopwatch2,\n  // Stopwatch3,\n  // ReactForceUpdate2,\n  // StopwatchDisplay1,\n  // StopwatchDisplay2,\n  StopwatchDisplay3,\n  // DateToNow,\n}\nconst ViewController = () => {\n  const [viewId, setViewId] = useState(\"StopwatchDisplay3\")\n  const DisplayPage = optionsMap[viewId]\n\n  const handleViewOption = (id) => {\n    if (!id) {\n      setViewId(\"\")\n    } else {\n      setViewId(id)\n    }\n  }\n\n  const optionsArray = Object.keys(optionsMap).map((item) => ({\n    id: item,\n    handler: () => handleViewOption(item),\n  }))\n\n  if (viewId !== \"\") {\n    return (\n      <div>\n        <BackButton handler={() => handleViewOption(\"\")} />\n        <DisplayPage />\n      </div>\n    )\n  }\n\n  return <ViewOptions options={optionsArray} />\n}\n\nexport default ViewController\n","import ViewController from \"./components/ViewController\"\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <ViewController />\n    </div>\n  )\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}